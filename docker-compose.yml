version: '3'
services:
  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_PASSWORD=postgres_password

  redis:
    image: redis:latest

  nginx:
    build: 
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "3000:80"

  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    volumes:
      - /usr/app/node_modules
      - ./server:/usr/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PGUSER=postgres
      - PGHOST=postgres
      - PGDATABASE=postgres
      - PGPASSWORD=postgres_password
      - PGPORT=5432
    restart: always

  worker:
    build:
      context: ./worker
      dockerfile: Dockerfile
    volumes:
      - /usr/app/node_modules
      - ./worker:/usr/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379

  frontend:
    stdin_open: true
    build:
      context: ./client
      dockerfile: Dockerfile
    volumes:
      - /usr/app/node_modules
      - ./client:/usr/app
    restart: always

  # nginx:
  #   build: 
  #     context: ./nginx
  #     dockerfile: Dockerfile.dev
  #   ports:
  #     - "3000:80"

  # backend:
  #   build:
  #     context: ./server
  #     dockerfile: Dockerfile.dev
  #   volumes:
  #     - /usr/app/node_modules
  #     - ./server:/usr/app
  #   environment:
  #     - REDIS_HOST=redis
  #     - REDIS_PORT=6379
  #     - PGUSER=postgres
  #     - PGHOST=postgres
  #     - PGDATABASE=postgres
  #     - PGPASSWORD=postgres_password
  #     - PGPORT=5432
  #   restart: always

  # worker:
  #   build:
  #     context: ./worker
  #     dockerfile: Dockerfile.dev
  #   volumes:
  #     - /usr/app/node_modules
  #     - ./worker:/usr/app
  #   environment:
  #     - REDIS_HOST=redis
  #     - REDIS_PORT=6379

  # frontend:
  #   stdin_open: true
  #   build:
  #     context: ./client
  #     dockerfile: Dockerfile.dev
  #   volumes:
  #     - /usr/app/node_modules
  #     - ./client:/usr/app
  #   restart: always